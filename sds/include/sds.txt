/*=======0=========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1====*/
/**
\defgroup SDS_Circular_Buffer SDS Circular Buffer
\brief sds.h: SDS circular buffer handling for data streams
\details
The stream data is written to and read from a circular buffer allocated in RAM. Event callback function which is triggered on data threshold reached can be registered.
@{
*/

/**
\typedef sdsId_t
\details
todo test

*/

/**
\typedef void (*sdsPlayEvent_t) (sdsPlayId_t id, uint32_t event)
\details
todo 

*/

/**
\fn          sdsId_t sdsOpen (void *buf, uint32_t buf_size, uint32_t record_size)
\details
todo
*/

/**
\fn          int32_t sdsClose (sdsId_t id)
\details
todo
*/

/**
\fn          int32_t  sdsRegisterEvents (sdsId_t id, sdsEvent_t event_cb, uint32_t event_mask, void *event_arg)
\details
todo
*/

/**
\fn          uint32_t sdsWrite (sdsId_t id, const void *buf, uint32_t buf_size)
\details
todo
*/

/**
\fn          uint32_t sdsRead (sdsId_t id, void *buf, uint32_t buf_size)
\details
todo
*/

/**
\fn          int32_t sdsClear (sdsId_t id)
\details
todo
*/

/**
\fn          uint32_t sdsGetCount (sdsId_t id)
\details
todo
*/


/**
@}
*/

// end group SDS_Circular_Buffer


/*=======0=========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1====*/
/**
\defgroup SDS_IO_Interface SDS I/O Interface
\brief sdsio.h: SDS I/O Interface for data streams
\details
The stream data can be written to an output device or read from an input device.  Typically these interfaces communicate to an
SDS I/O server that reads or writes SDS data files.
@{
*/

/**
\typedef sdsioId_t
\details
todo test

*/

/**
\typedef sdsioMode_t
\details
todo 
*/

/**
\fn          int32_t sdsioInit (void)
\details
todo
*/
int32_t sdsioInit (void);

/**
\fn          int32_t sdsioUninit (void)
\details
todo
*/

/**
\fn          sdsioId_t sdsioOpen (const char *name, sdsioMode_t mode)
\details
todo
*/

/**
\fn          int32_t sdsioClose (sdsioId_t id)
\details
todo
*/

/**
\fn          uint32_t sdsioWrite (sdsioId_t id, const void *buf, uint32_t buf_size)
\details
todo
*/

/**
\fn          uint32_t sdsioRead (sdsioId_t id, void *buf, uint32_t buf_size)
\details
todo
*/

/**
\fn          int32_t sdsioEndOfStream (sdsioId_t id)
\details
todo
*/

/**
@}
*/
// end group SDS_Circular_Buffer


/*=======0=========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1====*/
/**
\defgroup SDS_Recorder SDS Recorder
\brief sds_rec.h: SDS Recorder for writing SDS files via communication or file I/O interface.
\details
Todo

@{
*/

/**
\typedef sdsRecId_t
\details
todo
*/

/**
\fn          int32_t sdsRecInit (sdsRecEvent_t event_cb)
\details


todo

*/

/**
\fn          int32_t sdsRecUninit (void)
\details

todo

*/

/**
\fn          sdsRecId_t sdsRecOpen (const char *name, void *buf, uint32_t buf_size, uint32_t io_threshold);
\details

todo

*/

/**
\fn          sdsRecClose (sdsRecId_t id);
\details

todo

*/

/**
\fn          uint32_t sdsRecWrite (sdsRecId_t id, uint32_t timestamp, const void *buf, uint32_t buf_size);
\details

todo

*/

/**
@}
*/
// end group SDS_Recorder


/*=======0=========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1====*/
/**
\defgroup SDS_Player SDS Player
\brief sds_play.h: SDS Player for reading SDS files via communication or file I/O interface.
\details
The SDS Player functions allow to playback SDS files via a file I/O interface. The files are either
read via a communication stack that is connected to the SDSIO server or via a File System interface 
that uses a memory card in the target system as storage.

@{
*/

/**
\typedef sdsPlayId_t
\details
todo
*/


/**
\typedef void (*sdsPlayEvent_t) (sdsPlayId_t id, uint32_t event)
\details
todo 

*/


/**
\fn          int32_t sdsPlayInit (void)
\details

todo

*/

/**
\fn          int32_t sdsPlayUninit (void)
\details

todo

*/

/**
\fn          sdsPlayId_t sdsPlayOpen (const char *name, void *buf, uint32_t buf_size, uint32_t io_threshold)
\details

todo

*/

/**
\fn          int32_t sdsPlayClose (sdsPlayId_t id)
\details

todo x

*/

/**
\fn         uint32_t sdsPlayRead (sdsPlayId_t id, uint32_t *timestamp, void *buf, uint32_t buf_size)
\details

todo x

*/

/**
\fn          uint32_t sdsPlayGetSize (sdsPlayId_t id)
\details

todo

*/

/**
\fn          int32_t sdsPlayEndOfStream (sdsPlayId_t id)
\details

todo

*/

/**
@}
*/
// end group SDS_Player

/*=======0=========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1====*/
/**
\defgroup Define Define Values
@{
*/

/**
\defgroup SDS_Errors SDS Error Codes
\brief SDS Player Error Codes
\details The following values are returned by most functions.
@{
\def SDS_PLAY_OK 
\brief SDS function execution completed.

\def SDS_PLAY_ERROR
\brief Error during sds_play function execution. 
@}
*/

/**
\defgroup SDS_Event_Codes SDS Event Codes
\brief SDS Player Event Codes
\details The following values are passed as event value to \ref sdsPlayEvent_t.
@{
\def SDS_PLAY_EVENT_IO_ERROR
\brief I/O Error during sds_play function execution. 
@}
*/

/**
@}
*/
// end group Defines

